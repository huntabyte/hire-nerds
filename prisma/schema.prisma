// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Profile {
    id String @id @default(uuid())

    firstName String? @map("first_name")
    lastName  String? @map("last_name")

    organization OrganizationUser?
    Job          Job[]

    @@map("profiles")
}

model Organization {
    id String @id @default(uuid())

    name    String
    website String?

    organizationUsers OrganizationUser[]
    Job               Job[]

    @@map("organizations")
}

enum OrganizationRole {
    RECRUITER
    ADMIN
}

model OrganizationUser {
    organization   Organization @relation(fields: [organizationId], references: [id])
    organizationId String       @map("organization_id")

    user   Profile @relation(fields: [userId], references: [id])
    userId String  @unique @map("user_id")

    role OrganizationRole @default(RECRUITER)

    @@id([userId, organizationId])
    @@map("organizations_users")
}

enum JobType {
    FULL_TIME
    PART_TIME
    CONTRACT
}

enum JobLocType {
    REMOTE
    HYBRID
    OFFICE
}

enum CompensationType {
    SALARY
    HOURLY
}

model Job {
    id            String           @id @default(uuid())
    title         String
    type          JobType[]
    location      String
    compType      CompensationType @map("comp_type")
    payScaleBegin Int              @map("pay_scale_begin")
    payScaleEnd   Int              @map("pay_scale_end")
    description   String
    jobLocType    JobLocType       @map("job_location_type")

    organization   Organization @relation(fields: [organizationId], references: [id])
    organizationId String       @map("organization_id")

    user   Profile @relation(fields: [userId], references: [id])
    userId String  @map("user_id")

    @@map("jobs")
}
